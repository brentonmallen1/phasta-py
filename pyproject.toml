[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "phasta-py"
version = "0.1.0"
description = "Python implementation of PHASTA CFD solver"
readme = "README.md"
requires-python = ">=3.12"
license = {file = "License.txt"}
authors = [
    {name = "PHASTA Team", email = "phasta@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Mathematics",
]
dependencies = [
    "numpy>=2.0.0",
    "scipy>=1.12.0",
    "pandas>=2.2.0",
    "mpi4py>=3.1.4",
    "h5py>=3.10.0",
    "netCDF4>=1.6.5",
    "pycuda>=2024.1.0",
    "pyopencl>=2024.1.0",
    "metal-python>=0.2.0",
    "matplotlib>=3.8.0",
    "pyvista>=0.43.0",
    "vtk>=9.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-mpi>=0.7.0",
    "pytest-cov>=4.1.0",
    "black>=24.1.0",
    "ruff>=0.2.0",
    "pyright>=1.1.0",
]
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
    "nbsphinx>=0.9.0",
]
solvers = [
    "petsc4py>=3.20.0",
    "slepc4py>=3.20.0",
]
fem = [
    "fenics>=2024.1.0",
    "dolfin>=2024.1.0",
]

[tool.black]
line-length = 100
target-version = ["py312"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py312"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "ANN", # flake8-annotations
    "N",   # pep8-naming
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "RUF", # Ruff-specific rules
]

[tool.pyright]
pythonVersion = "3.12"
typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=phasta"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "mpi: marks tests that require MPI",
]
